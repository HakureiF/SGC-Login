namespace Seer.Utils
{
    internal class JsScript
    {
        public readonly static string LoginListener = "/***\r\n * 该文件下所有函数均在登录游戏后自动注册进socket监听器\r\n */\r\n\r\nvar rivalId = 0 //对手米米号\r\nvar rivalPetNow = 0 //对手当前出战精灵id\r\nvar rivalAliveNum = 0 //对手存活精灵数量\r\n//获取对手首发精灵id\r\nfunction rivalFirstPet(t) {\r\n    console.log(t.data)\r\n\r\n    //获取房主id\r\n    var unit8_Host = new Uint8Array(t.data.buffer.slice(8, 12))\r\n    var hostId = unit8_Host[0] * 16777216 + unit8_Host[1] * 65536 + unit8_Host[2] * 256 + unit8_Host[3]\r\n    console.log('hostId', hostId)\r\n    var mess = {}\r\n    if (rivalId === hostId) {\r\n        mess = { type: 'isRoomOwner', data: false };\r\n    } else {\r\n        mess = { type: 'isRoomOwner', data: true };\r\n    }\r\n    console.log(mess)\r\n    window.chrome.webview.postMessage(JSON.stringify(mess));\r\n\r\n    //一秒后获取对手首发精灵id\r\n    setTimeout(function () {\r\n        if (rivalId === hostId) {\r\n            rivalAliveNum = FightUserInfo.fighterInfos.myInfo.aliveNum\r\n        } else {\r\n            rivalAliveNum = FightUserInfo.fighterInfos.otherInfo.aliveNum\r\n        }\r\n        rivalPetNow = FighterModelFactory.enemyMode._info._petID\r\n        var mess2 = { type: 'loggerPetId', data: rivalPetNow };\r\n        console.log(mess2)\r\n        window.chrome.webview.postMessage(JSON.stringify(mess2));\r\n    }, 1000)\r\n}\r\n//记录对手精灵\r\nfunction peakLogger(t) {\r\n    KTool.getMultiValue([3306], function (i) {\r\n        var fightMode = i[0] //巅峰模式\r\n        if (fightMode === 1) { // 3v3\r\n            KTool.getMultiValue([3308], function (t) {\r\n                rivalId = t[0]\r\n                console.log(\"rival:\", rivalId)\r\n                var ids = [];\r\n                OtherPetInfoManager.getPetInfo(rivalId, function (t) {\r\n                    for (var i = 0; i < t.length; i++) {\r\n                        ids.push(t[i].id)\r\n                    }\r\n                    var mess = { type: 'rivalPet', data: ids };\r\n                    console.log(mess)\r\n                    window.chrome.webview.postMessage(JSON.stringify(mess));\r\n                }, 1) //最后的参数1代表主背包\r\n            })\r\n        } else if (fightMode === 2) { // 6v6\r\n            KTool.getMultiValue([3308], function (t) {\r\n                rivalId = t[0]\r\n                console.log(\"rival:\", rivalId)\r\n                var ids = [];\r\n                OtherPetInfoManager.getPetInfo(rivalId, function (t) {\r\n                    for (var i = 0; i < t.length; i++) {\r\n                        ids.push(t[i].id)\r\n                    }\r\n                    OtherPetInfoManager.getPetInfo(rivalId, function (t) {\r\n                        for (var i = 0; i < t.length; i++) {\r\n                            ids.push(t[i].id)\r\n                        }\r\n                        var mess = { type: 'rivalPet', data: ids };\r\n                        console.log(mess)\r\n                        window.chrome.webview.postMessage(JSON.stringify(mess));\r\n                    }, 2) //最后的参数2代表副背包\r\n                }, 1) //最后的参数1代表主背包\r\n            })\r\n        }\r\n    })\r\n}\r\n//主动切换与死亡切换\r\nfunction listenPetChange(t) {\r\n    var unit8 = new Uint8Array(t._data.data.buffer.slice(0, 4))\r\n    var userId = unit8[0] * 16777216 + unit8[1] * 65536 + unit8[2] * 256 + unit8[3]\r\n    if (userId === rivalId) { //对手进行的切换\r\n        if (FightUserInfo.fighterInfos.otherInfo.aliveNum < rivalAliveNum) { //根据精灵数量差判断是死切还是中切\r\n            var mess = { type: 'petDefeated', data: rivalPetNow }\r\n            console.log(mess)\r\n            window.chrome.webview.postMessage(JSON.stringify(mess));\r\n            rivalAliveNum = FightUserInfo.fighterInfos.otherInfo.aliveNum\r\n        }\r\n        unit8 = new Uint8Array(t._data.data.buffer.slice(4, 8)) \r\n        var petId = unit8[2] * 256 + unit8[3] //对方切上来的精灵\r\n        rivalPetNow = petId\r\n        var mess = { type: 'loggerPetId', data: petId };\r\n        window.chrome.webview.postMessage(JSON.stringify(mess));\r\n    }\r\n}\r\n\r\n/**\r\n * 读取字节流里的房间号\r\n * @param {*} t \r\n */\r\nfunction readRoomId(t) {\r\n    t.data.position = 0;\r\n    const id = t.data.readUnsignedInt();\r\n    const mess = { type: 'roomIdCreated', data: id };\r\n    console.log(mess)\r\n\r\n    setTimeout(() => {\r\n        window.chrome.webview.postMessage(JSON.stringify(mess));\r\n    }, 3000)\r\n}\r\n//轮询登录状态\r\nfunction pollingLogin() {\r\n    if (!GuideManager) {\r\n        return\r\n    }\r\n    console.log(\"isLogin:\", GuideManager.isCompleted())\r\n    if (GuideManager.isCompleted()) {\r\n\r\n        //登录成功后注册socket指令监听器\r\n        SocketConnection.addCmdListener(45143, peakLogger, {}) //监听对方ban我方精灵操作\r\n        SocketConnection.addCmdListener(2407, listenPetChange, {}) //监听精灵切换操作\r\n        SocketConnection.addCmdListener(CommandID.NOTE_START_FIGHT, rivalFirstPet, {}) //监听对战开始\r\n        SocketConnection.addCmdListener(45135, readRoomId); //监听创建房间\r\n\r\n        let mimi = MainManager.actorID\r\n        var mess = { type: 'mimiId', data: mimi };\r\n        console.log(mess)\r\n        window.chrome.webview.postMessage(JSON.stringify(mess));\r\n        clearInterval(loginListener)\r\n    }\r\n}\r\n\r\nvar loginListener = setInterval(pollingLogin, 200)";

        public readonly static string WebViewListener = "/***\r\n * 该文件下所有函数均通过接受webview消息触发\r\n */\r\n\r\n// var joinRoom_antishake = true;\r\n\r\n/**\r\n * 精灵放入背包，data为要放入背包的精灵id\r\n * @param {number[]} data \r\n */\r\nasync function addToBag(data) {\r\n    let i;\r\n    const ids = data;\r\n\r\n    var bagMap = PetManager.getBagMap(); //当前主背包\r\n    for (i = 0; i < bagMap.length; i++) { //遍历主背包，将所有精灵放入仓库\r\n        await PetManager.bagToStorage(bagMap[i].catchTime);\r\n        console.log('toStorage', bagMap[i].id)\r\n    }\r\n    var secondBagMap = PetManager.getSecondBagMap(); //当前副背包\r\n    for (i = 0; i < secondBagMap.length; i++) { //遍历副背包，将所有的精灵放入仓库\r\n        await PetManager.secondBagToStorage(secondBagMap[i].catchTime);\r\n        console.log('sBagtoStorage', secondBagMap[i].id)\r\n    }\r\n    await PetStorage2015InfoManager.getTotalInfo(); //刷新仓库内精灵数据\r\n    var allPets = PetStorage2015InfoManager.allInfo; //仓库内精灵数据\r\n    for (i = 0; i < ids.length; i++) { //遍历仓库，找到第一个符合id的精灵放入\r\n        for (let j = 0; j < allPets.length; j++) {\r\n            if (allPets[j].id === ids[i]) {\r\n                PetStorage2015MovePetManager.movePetToBag(allPets[j]);\r\n                console.log('toBag', allPets[j])\r\n                await PetStorage2015InfoManager.getTotalInfo();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * 根据catchTime更换背包\r\n * @param {*} data \r\n */\r\nasync function addToBagFull(data) {\r\n    let i;\r\n\r\n    var secondBagMap = PetManager.getSecondBagMap(); //当前副背包\r\n    for (i = 0; i < secondBagMap.length; i++) { //遍历副背包，将pick精灵精灵放入仓库\r\n        if (data[secondBagMap[i].catchTime]) {\r\n            await PetManager.secondBagToStorage(secondBagMap[i].catchTime);\r\n            console.log('sBagtoStorage', secondBagMap[i].id)\r\n        }\r\n    }\r\n    var bagMap = PetManager.getBagMap(); //当前主背包\r\n    for (i = 0; i < bagMap.length; i++) { //遍历主背包，将pick精灵放入仓库，未pick精灵放进副背包\r\n        if (data[bagMap[i].catchTime]) {\r\n            await PetManager.bagToStorage(bagMap[i].catchTime);\r\n            console.log('toStorage', bagMap[i].id)\r\n        } else {\r\n            await PetManager.bagToSecondBag(bagMap[i].catchTime);\r\n        }\r\n    }\r\n\r\n    await PetStorage2015InfoManager.getTotalInfo(); //刷新仓库内精灵数据\r\n    // data.forEach((id, pet) => {\r\n    //     PetStorage2015MovePetManager.movePetToBag(pet)\r\n    //     console.log('toBag', pet)\r\n    // })s\r\n    for (var j = 0; j < 6; j++) {\r\n        PetStorage2015MovePetManager.movePetToBag(data[j])\r\n        console.log('toBag', data[j])\r\n    }\r\n}\r\n/**\r\n * 创建房间\r\n */\r\nfunction createRoom() {\r\n    // 打开建房界面，激活peakJihadFreeWar模块\r\n    ModuleManager.beginShow(\r\n        \"peakJihadFreeWar\",\r\n        [\"peakJihadFreeWar\"],\r\n        \"PeakJihadCreateARoomPanel\"\r\n    );\r\n    // 发送socket建房消息\r\n    setTimeout(() => {\r\n        SocketConnection.send(45135, 1, 1, undefined, 2);\r\n    }, 500);\r\n    // 打开房间界面\r\n    setTimeout(() => {\r\n        ModuleManager.beginShow(\"peakJihadFreeWar\", [], \"PeakJihadRoomPanel\");\r\n        SocketConnection.addCmdListener(CommandID.FIGHT_OVER, fightOver, FightOverController);\r\n    }, 1000)\r\n    setTimeout(() => {\r\n        PetManager._cureAll(true, true)\r\n    }, 1500)\r\n}\r\n/**\r\n * 加入房间\r\n * @param {number} data \r\n */\r\nfunction joinRoom(data) {\r\n    // if (joinRoom_antishake) {\r\n    //     joinRoom_antishake = false\r\n    SocketConnection.sendByQueue(45136, [1, data], function (e) {\r\n        i.roomid = \"\";\r\n        ModuleManager.showModule(\"peakJihadFreeWar\", [\"peakJihadFreeWar\"], null, \"PeakJihadRoomPanel\")\r\n        SocketConnection.addCmdListener(CommandID.FIGHT_OVER, fightOver, FightOverController);\r\n        setTimeout(readyFight, 1000)\r\n        PetManager._cureAll(true, true)\r\n        console.log(\"after join room\")\r\n    })\r\n    // }\r\n}\r\n/**\r\n * 自由战准备\r\n */\r\nfunction readyFight() {\r\n    // joinRoom_antishake = true\r\n    console.log(\"readyFight\")\r\n    PeakJihadController.getFristBagALLPetLvIsFull2() ?\r\n        SocketConnection.sendByQueue(45136, [3, 0], function () { Alarm.show(\"已经通过发包准备，请勿点击准备按钮，等待房主开始对局即可\") }) :\r\n        Alarm.show(\"出战背包中的精灵还有未满级或者不满血的哦！点设置阵容按钮进行设置吧！\")\r\n}\r\n/**\r\n * 关闭自由战房间\r\n */\r\nfunction shutRoom() {\r\n    // setTimeout(() => {\r\n    //     SocketConnection.sendByQueue(45136, [5, 0], function() {\r\n    //         ModuleManager.hideModule(peakJihadFreeWar.PeakJihadRoomPanel),\r\n    //         ModuleManager.showModule(\"peakJihadFirstPage\", [\"peakJihadFirstPage\"], null, \"PeakJihadFreeMode\")\r\n    //     })\r\n    // }, 1000)\r\n}\r\n\r\nfunction quitRoom() {\r\n    // setTimeout(() => {\r\n    //     SocketConnection.sendByQueue(45136, [2, 0], function() {\r\n    //         ModuleManager.hideModule(peakJihadFreeWar.PeakJihadRoomPanel),\r\n    //         ModuleManager.showModule(\"peakJihadFirstPage\", [\"peakJihadFirstPage\"], null, \"PeakJihadFreeMode\")\r\n    //     })\r\n    // }, 500)\r\n}\r\n/**\r\n * 返回魂印id中最大的id\r\n * @param {*} effectList \r\n * @returns \r\n */\r\nfunction getEffectId(effectList) {\r\n    var tmpEffectId = 0\r\n    for (var i=0; i<effectList.length; i++) {\r\n        if (effectList[i].effectID > tmpEffectId) {\r\n            tmpEffectId = effectList[i].effectID\r\n        }\r\n    }\r\n    return tmpEffectId\r\n}\r\n/**\r\n * 获取背包精灵数据\r\n */\r\nfunction getBag(webviewData) {\r\n    var firstBagDetail = PetManager._bagMap._content;\r\n    var secondBagDetail = PetManager._secondBagMap._content\r\n\r\n    var ids = []\r\n    var firstBag = []\r\n    var secondBag = []\r\n\r\n    var firstBagkeys = Object.keys(firstBagDetail);\r\n    for (var i = 0; i < firstBagkeys.length; i++) {\r\n        effectList = firstBagDetail[firstBagkeys[i]].effectList\r\n        firstBag.push({\r\n            id: firstBagDetail[firstBagkeys[i]].id,\r\n            catchTime: firstBagDetail[firstBagkeys[i]].catchTime,\r\n            level: firstBagDetail[firstBagkeys[i]].level,\r\n            effectID: effectList && effectList.length > 0 ? getEffectId(effectList) : 0,\r\n            marks: [firstBagDetail[firstBagkeys[i]].skillMark, firstBagDetail[firstBagkeys[i]].abilityMark, firstBagDetail[firstBagkeys[i]].commonMark],\r\n            skillArray: firstBagDetail[firstBagkeys[i]].skillArray,\r\n            hideSKill: firstBagDetail[firstBagkeys[i]].hideSKill,\r\n            state: 0,\r\n            bindMarks: CountermarkController.getPetBindMarks({'id': firstBagDetail[firstBagkeys[i]].id}),\r\n            skinId: firstBagDetail[firstBagkeys[i]]._skinId\r\n        })\r\n        ids.push(firstBagDetail[firstBagkeys[i]].id)\r\n    }\r\n\r\n    var secondBagkeys = Object.keys(secondBagDetail);\r\n    for (var i = 0; i < secondBagkeys.length; i++) {\r\n        effectList = secondBagDetail[secondBagkeys[i]].effectList\r\n        secondBag.push({\r\n            id: secondBagDetail[secondBagkeys[i]].id,\r\n            catchTime: secondBagDetail[secondBagkeys[i]].catchTime,\r\n            level: secondBagDetail[secondBagkeys[i]].level,\r\n            effectID: effectList && effectList.length > 0 ? getEffectId(effectList) : 0,\r\n            marks: [secondBagDetail[secondBagkeys[i]].skillMark, secondBagDetail[secondBagkeys[i]].abilityMark, secondBagDetail[secondBagkeys[i]].commonMark],\r\n            skillArray: secondBagDetail[secondBagkeys[i]].skillArray,\r\n            hideSKill: secondBagDetail[secondBagkeys[i]].hideSKill,\r\n            state: 0,\r\n            bindMarks: CountermarkController.getPetBindMarks({'id': secondBagDetail[secondBagkeys[i]].id}),\r\n            skinId: secondBagDetail[secondBagkeys[i]]._skinId\r\n        })\r\n        ids.push(secondBagDetail[secondBagkeys[i]].id)\r\n    }\r\n    var mess = {\r\n        type: 'bagInfo',\r\n        signal: webviewData.Signal,\r\n        data: ids,\r\n        data2: [...firstBag, ...secondBag]\r\n    }\r\n    console.log(mess)\r\n    window.chrome.webview.postMessage(JSON.stringify(mess));\r\n}\r\n/**\r\n * 获取套装id\r\n */\r\nfunction getSuit(signal) {\r\n    var suit = SuitXMLInfo.getSuitIDs(MainManager.actorInfo.clothIDs)\r\n    if (suit.length > 0) {\r\n        var mess = { type: 'suitId', data: suit[0], signal: signal }\r\n        window.chrome.webview.postMessage(JSON.stringify(mess));\r\n    } else {\r\n        var mess = { type: 'suitId', data: 0, signal: signal }\r\n        window.chrome.webview.postMessage(JSON.stringify(mess));\r\n    }\r\n}\r\n/**\r\n * 获取精英收藏数据\r\n */\r\nfunction getElite() {\r\n    if (PetStorage2015InfoManager.eliteInfo === undefined) {\r\n        var mess = { type: 'eliteInfoUnLoad', data: 0 };\r\n        console.log(mess)\r\n        window.chrome.webview.postMessage(JSON.stringify(mess));\r\n        return;\r\n    }\r\n\r\n    const elite = PetStorage2015InfoManager.eliteInfo;\r\n    var ids = [];\r\n    for (let i = 0; i < elite.length; i++) {\r\n        ids.push(elite[i].id);\r\n    }\r\n    var mess = { type: 'eliteInfo', data: ids };\r\n    console.log(mess)\r\n    window.chrome.webview.postMessage(JSON.stringify(mess));\r\n}\r\n/**\r\n * 监听对战结果面板点击事件\r\n */\r\nfunction afterFightClick() {\r\n    EventManager.removeEventListener(PetFightEvent.ALARM_CLICK, afterFightClick)\r\n    var mess = { type: 'fightOverClick', data: 0 };\r\n    window.chrome.webview.postMessage(JSON.stringify(mess));\r\n    PeakJihadController.getFristBagALLPetLvIsFull2() ? 0 : PetManager._cureAll(true, true)\r\n}\r\n/**\r\n * 战斗结束执行\r\n */\r\nfunction fightOver(t) {\r\n    SocketConnection.removeCmdListener(CommandID.FIGHT_OVER, fightOver, FightOverController)\r\n\r\n    // 监听结束面板点击\r\n    EventManager.addEventListener(PetFightEvent.ALARM_CLICK, afterFightClick)\r\n    setTimeout(function () {\r\n        console.log(\"isWinner:\", FightManager.isWin)\r\n        var mess = { type: 'isWinner', data: FightManager.isWin };\r\n        window.chrome.webview.postMessage(JSON.stringify(mess));\r\n    }, 1000)\r\n    // joinRoom_antishake = true\r\n}\r\n/**\r\n * 监听战斗结果函数\r\n */\r\n// function fightListen() {\r\n//     SocketConnection.removeCmdListener(CommandID.FIGHT_OVER, fightOver, FightOverController);\r\n//     SocketConnection.addCmdListener(CommandID.FIGHT_OVER, fightOver, FightOverController);\r\n// }\r\n/**\r\n * 获取对手米米号\r\n */\r\nfunction getRivalMimiId() {\r\n    KTool.getMultiValue([3314], function (t) {\r\n        var mess = { type: 'rivalMimiId', data: t[0] };\r\n        window.chrome.webview.postMessage(JSON.stringify(mess));\r\n    })\r\n}\r\n/**\r\n * 获取自己米米号\r\n * @param {*} webviewData \r\n */\r\nfunction getSelfMimiId(webviewData) {\r\n    let mimi = MainManager.actorID\r\n    var mess = { type: 'mimiId', data: mimi, signal: webviewData.Signal };\r\n    console.log(mess)\r\n    window.chrome.webview.postMessage(JSON.stringify(mess));\r\n}\r\n/**\r\n * 恢复背包\r\n * @param {*} data \r\n */\r\nasync function reStoreBag(data) {\r\n    var bagMap = PetManager.getBagMap(); //当前主背包\r\n    for (var i = 0; i < bagMap.length; i++) { //遍历主背包，将所有精灵放入仓库\r\n        await PetManager.bagToStorage(bagMap[i].catchTime);\r\n        console.log('toStorage', bagMap[i].id)\r\n    }\r\n    var secondBagMap = PetManager.getSecondBagMap(); //当前副背包\r\n    for (var i = 0; i < secondBagMap.length; i++) { //遍历副背包，将所有的精灵放入仓库\r\n        await PetManager.secondBagToStorage(secondBagMap[i].catchTime);\r\n        console.log('sBagtoStorage', secondBagMap[i].id)\r\n    }\r\n\r\n    await PetStorage2015InfoManager.getTotalInfo();\r\n    for (var j = 0; j < data.length - 6; j++) {\r\n        PetStorage2015MovePetManager.movePetToBag(data[j])\r\n    }\r\n    for (var j = 0; j < data.length - 6; j++) {\r\n        await PetManager.bagToSecondBag(data[j].catchTime);\r\n    }\r\n    for (var j = data.length - 6; j < data.length; j++) {\r\n        PetStorage2015MovePetManager.movePetToBag(data[j])\r\n    }\r\n}\r\n/**\r\n * 主处理函数\r\n * @param {*} event \r\n */\r\nfunction handle(event) {\r\n    if (!GuideManager.isCompleted()) {\r\n        //未登录游戏，阻止一切操作\r\n        var mess = { type: 'unLogin', data: 0 };\r\n        console.log(mess)\r\n        window.chrome.webview.postMessage(JSON.stringify(mess));\r\n        return;\r\n    }\r\n\r\n    console.log(event.data);\r\n    if (event.data.Type === 'addToBag') {\r\n        addToBag(event.data.Data)\r\n    }\r\n    if (event.data.Type === 'addToBagFull') {\r\n        addToBagFull(event.data.Data)\r\n    }\r\n    if (event.data.Type === 'joinRoom') {\r\n        joinRoom(event.data.Data)\r\n    }\r\n    if (event.data.Type === 'createRoom') {\r\n        createRoom()\r\n    }\r\n    if (event.data.Type === 'shutRoom') {\r\n        shutRoom()\r\n    }\r\n    if (event.data.Type === 'quitRoom') {\r\n        quitRoom()\r\n    }\r\n    if (event.data.Type === 'getBag') {\r\n        getBag(event.data)\r\n    }\r\n    if (event.data.Type === 'getSuit') {\r\n        getSuit(event.data.Signal)\r\n    }\r\n    if (event.data.Type === 'getElite') {\r\n        getElite()\r\n    }\r\n    if (event.data.Type === 'getRivalMimiId') {\r\n        getRivalMimiId()\r\n    }\r\n    if (event.data.Type === 'getSelfMimiId') {\r\n        getSelfMimiId(event.data)\r\n    }\r\n    if (event.data.Type === 'reStoreBag') {\r\n        reStoreBag(event.data.Data)\r\n    }\r\n}\r\n//webview消息监听器\r\nwindow.chrome.webview.removeEventListener('message', handle, true);\r\nwindow.chrome.webview.addEventListener('message', handle, true);\r\n";

        public readonly static string RewriteScript = "Alarm = function(t) {\r\n    function e() {\r\n        var e = t.call(this) || this;\r\n        return e.percentHeight = e.percentWidth = 100,\r\n        e.skinName = AlarmuiSkin,\r\n        e\r\n    }\r\n    return __extends(e, t),\r\n    e.prototype.childrenCreated = function() {\r\n        this.width = LevelManager.stage.stageWidth,\r\n        this.height = LevelManager.stage.stageHeight,\r\n        this.btn_ok.name = \"btnOk\",\r\n        t.prototype.childrenCreated.call(this)\r\n    }\r\n    ,\r\n    e.show = function(t, n, r, o, i) {\r\n        void 0 === n && (n = null),\r\n        void 0 === r && (r = null),\r\n        void 0 === o && (o = \"\"),\r\n        void 0 === i && (i = \"center\");\r\n        var s = {\r\n            msg: t,\r\n            applyFun: n,\r\n            container: r,\r\n            titleStr: o,\r\n            textAlign: i\r\n        };\r\n        if (!t.includes(\"已经放入了你的精灵背包\")) {\r\n            EventManager.dispatchEvent(new egret.Event(e.SHOW_ALARM,!1,!1,s))\r\n        }\r\n    }\r\n    ,\r\n    e.prototype.destroy = function() {}\r\n    ,\r\n    e.SHOW_ALARM = \"SHOW_ALARM\",\r\n    e\r\n}(eui.Component);";
    }
}
